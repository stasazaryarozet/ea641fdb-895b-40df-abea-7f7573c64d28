#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Tilda Migration Agent
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

from core.agent import MigrationAgent
from core.config import Config
from utils.logger import setup_logging


def main():
    """–ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging("logs/example.log", "INFO")
    
    try:
        # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config = Config("config.yaml")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞
        agent = MigrationAgent(config, dry_run=False)
        
        # –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏
        print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞ –º–∏–≥—Ä–∞—Ü–∏–∏...")
        agent.run()
        
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)


def extract_only_example():
    """–ü—Ä–∏–º–µ—Ä —Ç–æ–ª—å–∫–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    
    setup_logging("logs/extract_example.log", "INFO")
    
    try:
        config = Config("config.yaml")
        agent = MigrationAgent(config)
        
        print("üì• –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å Tilda...")
        agent.extract_only()
        
        print("‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)


def deploy_only_example():
    """–ü—Ä–∏–º–µ—Ä —Ç–æ–ª—å–∫–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"""
    
    setup_logging("logs/deploy_example.log", "INFO")
    
    try:
        config = Config("config.yaml")
        agent = MigrationAgent(config)
        
        print("‚òÅÔ∏è –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–∞ Google Cloud...")
        agent.deploy_only()
        
        print("‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    import argparse
    
    parser = argparse.ArgumentParser(description="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Tilda Migration Agent")
    parser.add_argument("--mode", choices=["full", "extract", "deploy"], 
                       default="full", help="–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã")
    
    args = parser.parse_args()
    
    if args.mode == "full":
        main()
    elif args.mode == "extract":
        extract_only_example()
    elif args.mode == "deploy":
        deploy_only_example() 